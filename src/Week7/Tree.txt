https://www.w3schools.com/dsa/dsa_theory_trees.php
https://www.w3schools.com/dsa/dsa_data_binarytrees.php

Depth: the number of edges from the node to the root node
Height: the number of edges from the node to the leaf node.

A balanced Binary Tree has at most 1 in difference between its left and right subtree heights, for each node in the tree.

A complete Binary Tree has all levels full of nodes, except the last level, which is can also be full, or filled from left to right. The properties of a complete Binary Tree means it is also balanced.

A full Binary Tree is a kind of tree where each node has either 0 or 2 child nodes.

A perfect Binary Tree has all leaf nodes on the same level, which means that all levels are full of nodes, and all internal nodes have two child nodes.The properties of a perfect Binary Tree means it is also full, balanced, and complete.

BINARY TREE TRAVERSAL

There are two main categories of Tree traversal methods:

Breadth First Search (BFS) is when the nodes on the same level are visited before going to the next level in the tree. This means that the tree is explored in a more sideways direction.

Depth First Search (DFS) is when the traversal moves down the tree all the way to the leaf nodes, exploring the tree branch by branch in a downwards direction.

There are three different types of DFS traversals:

pre-order
in-order
post-order

1. Inorder Traversal: LPR - Left Parent Right (Ascending order)
2. Preorder Traversal: PLR - Parent Left Right
3. Postorder Traversal: LRP - Left Right Parent

BST: all the nodes on the right are greater than the nodes on the left.
A Binary Search Tree is a Binary Tree where every node's left child has a lower value, and every node's right child has a higher value.

The size of a tree is the number of nodes in it (n).

A subtree starts with one of the nodes in the tree as a local root, and consists of that node and all its descendants.

The descendants of a node are all the child nodes of that node, and all their child nodes, and so on. Just start with a node, and the descendants will be all nodes that are connected below that node.

The node's height is the maximum number of edges between that node and a leaf node.

A node's in-order successor is the node that comes after it if we were to do in-order traversal. 